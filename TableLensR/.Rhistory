#
rm(clsdatacache)
rm(label)
}
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-2]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-2]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
ncluster <- 7
clusterData <- function(data){
set.seed(20)
#ncluster <- floor(sqrt(nrow(data)))
ncluster <- 7
fit.km <- kmeans(data,ncluster,nstart = 25)
datalabel <- fit.km$cluster
return(datalabel)
}
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
clusterData <- function(data){
set.seed(20)
ncluster <- floor(sqrt(nrow(data)))
#ncluster <- 7
fit.km <- kmeans(data,ncluster,nstart = 25)
datalabel <- fit.km$cluster
return(datalabel)
}
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
clusterData <- function(data){
set.seed(20)
#ncluster <- floor(sqrt(nrow(data)))
ncluster <- 7
fit.km <- kmeans(data,ncluster,nstart = 25)
datalabel <- fit.km$cluster
return(datalabel)
}
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
clusterData <- function(data){
set.seed(20)
#ncluster <- floor(sqrt(nrow(data)))
ncluster <- 3
fit.km <- kmeans(data,ncluster,nstart = 25)
datalabel <- fit.km$cluster
return(datalabel)
}
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}
}
normdata <- clsdatacache$data / apply(clsdatacache$data,1,sd)
label <-  clusterData(as.matrix(normdata))
#calculate the silhouette coefficient
D <- clsdatacache$data
class_D <- label
dist_mat_D <- as.matrix( dist(D) )
sil <- SilhouetteCoefficient( class_D, dist_mat_D )
#calculate measure for each cell in the cluster
clsuterMesaure <- clusterEntropyInstance(dist_mat_D, sil, class_D,D)
clsuterMesaure <- cbind(clsuterMesaure,sil)
nameData <- paste(dirData,paste("sil_ins_",dataString[i],sep = ""),sep = "")
write.table(clsuterMesaure,file = nameData,sep = ";",row.names = FALSE)
#write the first element to representing
databind <- cbind(clsdatacache$data,label)
data_silhoutte <- cbind(clsdatacache$data,sil)
nameData <- paste(dirData,paste("cls_",dataString[i],sep = ""),sep = "")
write.table(databind,file = nameData,sep = ";",row.names = FALSE)
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(clsdatacache$tr,1,sd)
data_tr<- clsdatacache$nm_tr
# print(dim(data_tr))
clsdata[i] <-  data_tr
#
rm(clsdatacache)
rm(label)
}
