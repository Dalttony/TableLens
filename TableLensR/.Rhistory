if(i == 1){
clsdatacache.data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache.data <- dataReader[,1:ncol(data)-1]
}else{
clsdatacache.data <- dataReader[,2:ncol(data)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache.data
clsdatacache.tr <- t(data_tr)
data_tr <-clsdatacache.tr
#Normalize transpose data
clsdatacache.nm_tr <- clsdatacache.tr / apply(data_tr,1,sd)
data_tr<- clsdatacache.nm_tr
print(dim(data_tr))
clsdata[i] = clsdatacache
}
View(clsdatacache.nm_tr)
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white_r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(data)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(data)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white_r.data","Iris.data")
clsdata <- c()
clsdatacache <- "cache"
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(data)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(data)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white_r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(data)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(data)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white_r.data","Iris.data")
clsdata <- c()
clsdatacache <- "cache"
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- paste(dataString[i],clsdatacache,sep = "-")
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(data)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(data)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white_r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(data)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(data)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
rm(clsdatacache)
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(data)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(data)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
rm(clsdatacache)
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- t(data_tr)
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
rm(clsdatacache)
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- as.data.frame(t(data_tr))
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
rm(clsdatacache)
}
Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
#clsdatacache$tr <- as.data.frame(t(data_tr))
#data_tr <-clsdatacache$tr
#Normalize transpose data
#clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
#data_tr<- clsdatacache$nm_tr
#print(dim(data_tr))
rm(clsdatacache)
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
#data_tr <- clsdatacache$data
#clsdatacache$tr <- as.data.frame(t(data_tr))
#data_tr <-clsdatacache$tr
#Normalize transpose data
#clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
#data_tr<- clsdatacache$nm_tr
#print(dim(data_tr))
rm(clsdatacache)
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- as.data.frame(dataReader[,1:7])
}else{
if(i ==2){
clsdatacache$data <- as.data.frame(dataReader[,1:ncol(dataReader)-1])
}else{
clsdatacache$data <- as.data.frame(dataReader[,2:ncol(dataReader)-1])
}
}
#Transpose matrix
#data_tr <- clsdatacache$data
#clsdatacache$tr <- as.data.frame(t(data_tr))
#data_tr <-clsdatacache$tr
#Normalize transpose data
#clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
#data_tr<- clsdatacache$nm_tr
#print(dim(data_tr))
rm(clsdatacache)
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- as.data.frame(t(data_tr))
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
clsdata[i] <- clsdatacache
rm(clsdatacache)
}
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- data.frame()
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- as.data.frame(t(data_tr))
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
clsdata[i] <-  clsdatacache$nm_tr
rm(clsdatacache)
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- c()
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- as.data.frame(t(data_tr))
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
clsdata[i] <-  clsdatacache$nm_tr
rm(clsdatacache)
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- vector(length = length(dataString))
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- as.data.frame(t(data_tr))
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
clsdata[i] <-  clsdatacache$nm_tr
rm(clsdatacache)
}
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- vector(mode = "matrix", length = length(dataString))
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- as.data.frame(t(data_tr))
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
clsdata[i] <-  clsdatacache$nm_tr
rm(clsdatacache)
}
class(data_tr)
#Data to clustering
dirData <- "www/data/"
dataString <- c("carros_r.data", "winequality-white _r.data","Iris.data")
clsdata <- vector(mode = "data.frame", length = length(dataString))
#getting the cluster by using k-means and mean shift
for( i in 1:length(dataString) ){
clsdatacache <- dataString[i]
nameData <- paste(dirData,dataString[i],sep = "")
dataReader <- read.table(file = nameData , sep=";", skip = 4,quote="")
if(i == 1){
clsdatacache$data <- dataReader[,1:7]
}else{
if(i ==2){
clsdatacache$data <- dataReader[,1:ncol(dataReader)-1]
}else{
clsdatacache$data <- dataReader[,2:ncol(dataReader)-1]
}
}
#Transpose matrix
data_tr <- clsdatacache$data
clsdatacache$tr <- as.data.frame(t(data_tr))
data_tr <-clsdatacache$tr
#Normalize transpose data
clsdatacache$nm_tr <- clsdatacache$tr / apply(data_tr,1,sd)
data_tr<- clsdatacache$nm_tr
print(dim(data_tr))
clsdata[i] <-  clsdatacache$nm_tr
rm(clsdatacache)
}
??unclass
?unclass
install.packages("kmeans")
?kmeas
?kmeans
library(Kmeans)
library(kmeans)
install.packages("Kmeans")
install.packages("kmeans.ddR")
install.packages("installr")
setInternet2(TRUE)
installr::updater()
installr::updater()
shiny::runApp()
