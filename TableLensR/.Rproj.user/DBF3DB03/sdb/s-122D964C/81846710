{
    "contents" : "average <- function ( cluster, vector, diss) {\n  a <- 0\n  \n  for (i in 1:length(cluster)) {\n    a <- a + diss[cluster[i], vector]\n  }\n  \n  result <-  a / length(cluster)\n  return(result)\n}\n\n\nSilhouetteCoefficient <- function(matrix, diss){\n  \n  \n  cdata <- matrix\n  cdata_index <- unique(cdata)\n  \n  if (length(cdata_index)<= 1) {\n    print(\"Only one cluster found. It is not possible to \"\n          + \"calculate the Silhouette coefficient.\");\n  }\n  \n  cluster_id <- rep(0, length(cdata))\n  clusters <- vector(\"list\", length = length(cdata_index))\n  \n  for(i in 1:length(cdata)){\n    index = which(cdata_index %in% cdata[i])  \n    clusters[[index]] <- c(clusters[[index]], i )\n    cluster_id[i] <- index\n  }\n  \n  s <- rep(0, length(cdata))\n  \n  for (i in 1:length(s)) {\n    #testing if the cluster is a singleton\n    if ( length( clusters[[ cluster_id[i] ]] ) > 1 ) {\n      \n      a <- average( clusters[[ cluster_id[i] ]], i, diss )\n      b <- 10000\n      \n      for (j in 1:length(clusters) ){\n        if (j == cluster_id[i]) {\n          next\n        }\n        \n        b <- min(b, average( clusters[[j]], i, diss ) )\n      }\n     \n      s[i] = (b - a) / (max(a, b))\n      if(is.nan(s[i])){\n        s[i] <- 0  \n      }\n    } else {\n      #if it is a singleton, s <- 0\n      s[i] <- 0\n      \n    }  \n    #print(s[i])\n  }\n  \n  result <- mean(s)\n  #result\n  return(s)\n}\n\n#data <- read.table(file = \"www/data/Iris.data\", sep=\";\", skip = 4)\n#D <- data[,2:(ncol(data)-1)]\n#class_D las clases de la data\n#class_D <- data[, ncol(data)]\n#print(class_D)\n#length(class_D)\n#dist_mat_D = matriz de distancia\n#dist_mat_D <- as.matrix( dist(D) ) \n#sil <- SilhouetteCoefficient( class_D, dist_mat_D )#\n#print(sil)\n",
    "created" : 1485272544591.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3039487074",
    "id" : "81846710",
    "lastKnownWriteTime" : 1485718925,
    "path" : "C:/xampp/htdocs/TableLensRowUpdateFiseyes/TableLensR/silueta.R",
    "project_path" : "silueta.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}